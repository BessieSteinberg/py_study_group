What to talk about:  
 ☐ mocking can be LOTS of things, but generally 'mocking' means replacing some portion of your application with a dummy version of that thing for the purposes of testing.
   ☐ reasons to mock:
     ☐ increase speed of testing (if the thing you are mocking takes a long time)
     ☐ avoid undesired side effects (ex. if your service calls some external API you may not want to actually call those APIs w/ your test data)
     ☐ uncouple dependencies (if your application requires another service to opperate you may not want to test that other service when you are testing your application)

 ☐ testing basics
   ☐ basic_main.py
   ☐ test_main.py
   ☐ test_long.py
 ☐ basics of mocking methods
   ☐ basic_mock.py
 ☐ mock_classes
 ☐ mock_spec
 ☐ patch_decorators/
   ☐ patch_is_assignment.py
 ☐ side_effects


   ☐ pdb and other debuggers
   ☐ spying & advanved mocking (ex. called with correct args)
   ☐ decorators
   ☐ testing
     ☐ write a new unit test from scratch / from the code base
   ☐ installing dependeces / set up tools "whole ecosystem of crap that you need to use python"
     ☐ publish package to pip
     ☐ how do we do it here?
     ☐ the src dir in our docker devstack



References:
  ☐ https://semaphoreci.com/community/tutorials/getting-started-with-mocking-in-python